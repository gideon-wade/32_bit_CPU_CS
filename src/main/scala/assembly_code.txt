1. addi R1 R0 0  	 	; x
2. addi R2 R0 20 	 	; constant 20
3. loop1:
	4. blt R1 R2 6		; if (x < 20)
	5. goto 69		    ; end outer-loop
	6. addi R3 R0 0  	; y
	7. addi R4 R0 20 	; constant 20
8. loop2:
	9. blt R3 R4 11		; if(y < 20)
	10. goto 67		    ; end inner-loop
	11. mul R5 R3 R2	; (y * 20)
	12. add R6 R1 R5	; x + (y * 20)
	13. beq R1 R0 if1	; if (x == 0)
	14. beq R3 R0 if2	; if (y == 0)
	15. addi R7 R0 19 	; constant 19
	16. beq R1 R7 if3	; if (x == 19)
	17. beq R3 R7 if4	; if (y == 19)
	18. goto if5	  	; Processing inner pixel
19. if1:
	20. store R6 R0		; OUT_IMAGE[x][y] = 0
	21. goto 14		; check other if-statement
22. if2:
     	23. store R6 R0		; OUT_IMAGE[x][y] = 0
	24. goto 15 		; check other if-statement
25. if3:
     	26. store R6 R0		; OUT_IMAGE[x][y] = 0
	27. goto 17		; check other if-statement
28. if4:
	29. store R6 R0		; OUT_IMAGE[x][y] = 0
	30. goto 18		; check other if-statement
31. if5:
	32. load R8 R6		; IN_IMAGE[x][y]
	33. bneq R8 R0 else1	; if (IN_IMAGE != 0)
	34. store R8 R0 	; Black pixel
	35. goto 66		; end inner-loop
36. else1:				; White pixel, checking neighboring pixels
	37. cond1:
		38. subi R9 R1 1		; constant x - 1
		39. mul R10 R9 R5		; (x - 1) * (y * 20)
		40. load R11 R10		; IN_IMAGE[x - 1][y]
		41. beq R11 R0 61
	42. cond2:
		43. addi R12 R1 1		; constant x + 1
		44. mul R13 R12 R5		; (x + 1) * (y * 20)
		45. load R14 R13		; IN_Image[x + 1][y]
		46. beq R14 R0 61
	47. cond3:
		48. subi R15 R3 1		; constant y - 1
		49. mul R16 R15 R4		; (y - 1) * 20
		50. mul R17 R1 R16		; x * ((y - 1) * 20)
		51. load R18 R17		; IN_IMAGE[x - 1][y]
		52. beq R18 R0 61
	53. cond4:
		54. addi R19 R3 1		; constant y + 1
		55. mul R20 R19 R4		; (y + 1) * 20
		56. mul R21 R1 R20		; x * ((y + 1) * 20)
		57. load R22 R21		; IN_Image[x + 1][y]
		58. beq R22 R0 61
	59. goto else2:
	60. store R6 R0			; Erode
	61. goto 66			; end inner-loop
62. else2:
	63. addi R23 R0 255		; constant 255
	64. store R6 R23
65. addi R3 R3 1	; add 1 to y
66. goto loop2		; iterate loop2
67. addi R1 R1 1	; add 1 to x
68. goto loop1		; iterate loop1
69. END

